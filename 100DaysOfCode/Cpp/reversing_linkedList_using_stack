#include<iostream>
#include<stack>

using namespace std;

struct Node{
	int data;
	Node* next;
}; 
Node* head;

void insert(int x)
{
	Node* newNode = new Node();
	newNode->data = x;
	newNode->next = NULL;
	Node* currentNode;
	currentNode = head;
	if(currentNode == NULL)
	{
		head = newNode;
	}
	else
	{
		while(currentNode->next != NULL)
		{
			currentNode = currentNode->next;
		}
		currentNode->next = newNode;
	}
}

void print(Node* p)
{
	if(p==NULL) return;          // print the element using recursion
	cout<<p->data;
	print(p->next);
}
void reverse()
{	
	if(head == NULL) return;
	stack<struct Node*> S;
	Node* temp = head;
	while(temp != NULL)
	{
		S.push(temp);
		temp= temp->next;
	}
	temp = S.top();head = temp;
	S.pop();
	while(!S.empty())
	{
		temp->next = S.top();
		S.pop();
		temp = temp->next;
	}
	temp->next=NULL;
}
int main()
{
	head = NULL;
	insert(1);
	insert(2);
	insert(3);
	insert(4);print(head);
	cout<<"\nafter reversing the list\n";
	reverse();print(head);
}
